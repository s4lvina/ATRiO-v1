"""initial_schema

Revision ID: 1be1ec2e4a8e
Revises:
Create Date: 2025-07-11 13:28:49.973493

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1be1ec2e4a8e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Grupos",
        sa.Column("ID_Grupo", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("Nombre", sa.String(length=100), nullable=False),
        sa.Column("Fecha_Creacion", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("ID_Grupo"),
    )
    op.create_table(
        "Usuarios",
        sa.Column("ID_Usuario", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("Nombre", sa.String(length=100), nullable=False),
        sa.Column("Email", sa.String(length=100), nullable=False),
        sa.Column("Password_Hash", sa.String(length=100), nullable=False),
        sa.Column("ID_Grupo", sa.Integer(), nullable=True),
        sa.Column("Fecha_Creacion", sa.DateTime(), nullable=False),
        sa.Column("Rol", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["ID_Grupo"],
            ["Grupos.ID_Grupo"],
        ),
        sa.PrimaryKeyConstraint("ID_Usuario"),
        sa.UniqueConstraint("Email"),
    )
    op.create_table(
        "casos",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nombre", sa.String(), nullable=False),
        sa.Column("descripcion", sa.Text(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("estado", sa.String(), nullable=False),
        sa.Column("ID_Grupo", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ID_Grupo"],
            ["Grupos.ID_Grupo"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_casos_id"), "casos", ["id"], unique=False)
    op.create_table(
        "archivos_excel",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("caso_id", sa.Integer(), nullable=False),
        sa.Column("nombre", sa.String(), nullable=False),
        sa.Column("tipo", sa.String(), nullable=False),
        sa.Column("fecha_subida", sa.DateTime(), nullable=False),
        sa.Column("estado", sa.String(), nullable=False),
        sa.Column("error", sa.String(), nullable=True),
        sa.Column("metadatos", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(["caso_id"], ["casos.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_archivos_excel_id"), "archivos_excel", ["id"], unique=False)
    op.create_table(
        "capas_bitacora",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("caso_id", sa.Integer(), nullable=False),
        sa.Column("nombre", sa.String(), nullable=False),
        sa.Column("visible", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["caso_id"], ["casos.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_capas_bitacora_id"), "capas_bitacora", ["id"], unique=False)
    op.create_table(
        "saved_searches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("caso_id", sa.Integer(), nullable=False),
        sa.Column("nombre", sa.String(), nullable=False),
        sa.Column("filtros", sa.JSON(), nullable=False),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["caso_id"], ["casos.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_saved_searches_id"), "saved_searches", ["id"], unique=False)
    op.create_table(
        "puntos_bitacora",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("capa_id", sa.Integer(), nullable=False),
        sa.Column("atestado", sa.String(), nullable=False),
        sa.Column("fecha", sa.String(), nullable=False),
        sa.Column("latitud", sa.Float(), nullable=False),
        sa.Column("longitud", sa.Float(), nullable=False),
        sa.Column("direccion", sa.String(), nullable=True),
        sa.Column("visible", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["capa_id"], ["capas_bitacora.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_puntos_bitacora_id"), "puntos_bitacora", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_puntos_bitacora_id"), table_name="puntos_bitacora")
    op.drop_table("puntos_bitacora")
    op.drop_index(op.f("ix_saved_searches_id"), table_name="saved_searches")
    op.drop_table("saved_searches")
    op.drop_index(op.f("ix_capas_bitacora_id"), table_name="capas_bitacora")
    op.drop_table("capas_bitacora")
    op.drop_index(op.f("ix_archivos_excel_id"), table_name="archivos_excel")
    op.drop_table("archivos_excel")
    op.drop_index(op.f("ix_casos_id"), table_name="casos")
    op.drop_table("casos")
    op.drop_table("Usuarios")
    op.drop_table("Grupos")
    # ### end Alembic commands ###

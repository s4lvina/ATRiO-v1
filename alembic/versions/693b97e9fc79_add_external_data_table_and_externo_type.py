"""add_external_data_table_and_externo_type

Revision ID: 693b97e9fc79
Revises: 1be1ec2e4a8e
Create Date: 2025-07-13 17:52:37.816269

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = "693b97e9fc79"
down_revision: Union[str, None] = "1be1ec2e4a8e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "external_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("caso_id", sa.Integer(), nullable=False),
        sa.Column("matricula", sa.String(length=20), nullable=False),
        sa.Column("source_name", sa.String(length=255), nullable=False),
        sa.Column("import_date", sa.DateTime(), nullable=False),
        sa.Column("data_json", sa.JSON(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["caso_id"],
            ["Casos.ID_Caso"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_external_data_caso_id"), "external_data", ["caso_id"], unique=False
    )
    op.create_index(op.f("ix_external_data_id"), "external_data", ["id"], unique=False)
    op.create_index(
        op.f("ix_external_data_matricula"), "external_data", ["matricula"], unique=False
    )
    op.drop_index(
        "ix_external_data_sources_caso_id", table_name="external_data_sources"
    )
    op.drop_index("ix_external_data_sources_id", table_name="external_data_sources")
    op.drop_table("external_data_sources")
    op.drop_index(
        "ix_external_vehicle_data_fuente_id", table_name="external_vehicle_data"
    )
    op.drop_index("ix_external_vehicle_data_id", table_name="external_vehicle_data")
    op.drop_index(
        "ix_external_vehicle_data_matricula", table_name="external_vehicle_data"
    )
    op.drop_table("external_vehicle_data")
    op.drop_index("ix_user_activity_logs_id", table_name="user_activity_logs")
    op.drop_table("user_activity_logs")
    op.drop_index("ix_ExternalDataEntries_ID_Entrada", table_name="ExternalDataEntries")
    op.drop_index("ix_ExternalDataEntries_Matricula", table_name="ExternalDataEntries")
    op.drop_table("ExternalDataEntries")
    op.drop_index("ix_ExternalDataSets_ID_DataSet", table_name="ExternalDataSets")
    op.drop_table("ExternalDataSets")
    op.drop_index(
        "idx_archivos_caso_america",
        table_name="ArchivosExcel",
        sqlite_where=sa.text("ID_Caso = 7"),
    )
    op.drop_index("idx_archivos_caso_id", table_name="ArchivosExcel")
    op.drop_index("ix_archivosexcel_fecha_importacion", table_name="ArchivosExcel")
    op.drop_index("ix_archivosexcel_id_caso", table_name="ArchivosExcel")
    op.drop_index("ix_lecturasrelevantes_id_lectura", table_name="LecturasRelevantes")
    op.drop_index("idx_lector_carretera_sentido", table_name="lector")
    op.drop_index("idx_lector_provincia_organismo", table_name="lector")
    op.drop_index("ix_lector_coordenadas", table_name="lector")
    op.drop_index("ix_lector_localidad", table_name="lector")
    op.drop_index("ix_lector_provincia", table_name="lector")
    op.drop_index("idx_lectura_archivo_fecha", table_name="lectura")
    op.drop_index("idx_lectura_archivo_matricula", table_name="lectura")
    op.drop_index("idx_lectura_fecha_desc_optimized", table_name="lectura")
    op.drop_index("idx_lectura_fecha_lector_optimized", table_name="lectura")
    op.drop_index("idx_lectura_matricula_fecha_optimized", table_name="lectura")
    op.drop_index("idx_lectura_matricula_optimized", table_name="lectura")
    op.drop_index("idx_lectura_tipo_fuente", table_name="lectura")
    op.drop_index("ix_lectura_matricula_fecha", table_name="lectura")
    op.drop_index("ix_lectura_tipo_fecha", table_name="lectura")
    op.drop_index("ix_lectura_tipo_fuente", table_name="lectura")
    op.create_index(
        op.f("ix_lectura_Fecha_y_Hora"), "lectura", ["Fecha_y_Hora"], unique=False
    )
    op.create_index(
        op.f("ix_lectura_Matricula"), "lectura", ["Matricula"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_lectura_Matricula"), table_name="lectura")
    op.drop_index(op.f("ix_lectura_Fecha_y_Hora"), table_name="lectura")
    op.create_index("ix_lectura_tipo_fuente", "lectura", ["Tipo_Fuente"], unique=False)
    op.create_index(
        "ix_lectura_tipo_fecha",
        "lectura",
        ["Tipo_Fuente", "Fecha_y_Hora"],
        unique=False,
    )
    op.create_index(
        "ix_lectura_matricula_fecha",
        "lectura",
        ["Matricula", "Fecha_y_Hora"],
        unique=False,
    )
    op.create_index("idx_lectura_tipo_fuente", "lectura", ["Tipo_Fuente"], unique=False)
    op.create_index(
        "idx_lectura_matricula_optimized", "lectura", ["Matricula"], unique=False
    )
    op.create_index(
        "idx_lectura_matricula_fecha_optimized",
        "lectura",
        ["Matricula", "Fecha_y_Hora"],
        unique=False,
    )
    op.create_index(
        "idx_lectura_fecha_lector_optimized",
        "lectura",
        ["Fecha_y_Hora", "ID_Lector"],
        unique=False,
    )
    op.create_index(
        "idx_lectura_fecha_desc_optimized", "lectura", ["Fecha_y_Hora"], unique=False
    )
    op.create_index(
        "idx_lectura_archivo_matricula",
        "lectura",
        ["ID_Archivo", "Matricula"],
        unique=False,
    )
    op.create_index(
        "idx_lectura_archivo_fecha",
        "lectura",
        ["ID_Archivo", "Fecha_y_Hora"],
        unique=False,
    )
    op.create_index("ix_lector_provincia", "lector", ["Provincia"], unique=False)
    op.create_index("ix_lector_localidad", "lector", ["Localidad"], unique=False)
    op.create_index(
        "ix_lector_coordenadas",
        "lector",
        ["Coordenada_X", "Coordenada_Y"],
        unique=False,
    )
    op.create_index(
        "idx_lector_provincia_organismo",
        "lector",
        ["Provincia", "Organismo_Regulador"],
        unique=False,
    )
    op.create_index(
        "idx_lector_carretera_sentido", "lector", ["Carretera", "Sentido"], unique=False
    )
    op.create_index(
        "ix_lecturasrelevantes_id_lectura",
        "LecturasRelevantes",
        ["ID_Lectura"],
        unique=False,
    )
    op.create_index(
        "ix_archivosexcel_id_caso", "ArchivosExcel", ["ID_Caso"], unique=False
    )
    op.create_index(
        "ix_archivosexcel_fecha_importacion",
        "ArchivosExcel",
        ["Fecha_de_Importacion"],
        unique=False,
    )
    op.create_index(
        "idx_archivos_caso_id", "ArchivosExcel", ["ID_Caso", "ID_Archivo"], unique=False
    )
    op.create_index(
        "idx_archivos_caso_america",
        "ArchivosExcel",
        ["ID_Caso", "ID_Archivo"],
        unique=False,
        sqlite_where=sa.text("ID_Caso = 7"),
    )
    op.create_table(
        "ExternalDataSets",
        sa.Column("ID_DataSet", sa.INTEGER(), nullable=False),
        sa.Column("ID_Caso", sa.INTEGER(), nullable=False),
        sa.Column("Nombre_DataSet", sa.TEXT(), nullable=False),
        sa.Column("Nombre_Archivo", sa.TEXT(), nullable=False),
        sa.Column("Fecha_Importacion", sa.DATETIME(), nullable=False),
        sa.Column("Mapeo_Columnas", sqlite.JSON(), nullable=False),
        sa.ForeignKeyConstraint(["ID_Caso"], ["Casos.ID_Caso"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("ID_DataSet"),
    )
    op.create_index(
        "ix_ExternalDataSets_ID_DataSet",
        "ExternalDataSets",
        ["ID_DataSet"],
        unique=False,
    )
    op.create_table(
        "ExternalDataEntries",
        sa.Column("ID_Entrada", sa.INTEGER(), nullable=False),
        sa.Column("ID_DataSet", sa.INTEGER(), nullable=False),
        sa.Column("Matricula", sa.TEXT(), nullable=False),
        sa.Column("Datos_Adicionales", sqlite.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ID_DataSet"], ["ExternalDataSets.ID_DataSet"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("ID_Entrada"),
    )
    op.create_index(
        "ix_ExternalDataEntries_Matricula",
        "ExternalDataEntries",
        ["Matricula"],
        unique=False,
    )
    op.create_index(
        "ix_ExternalDataEntries_ID_Entrada",
        "ExternalDataEntries",
        ["ID_Entrada"],
        unique=False,
    )
    op.create_table(
        "user_activity_logs",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.VARCHAR(), nullable=False),
        sa.Column("action", sa.VARCHAR(), nullable=False),
        sa.Column("details", sa.VARCHAR(), nullable=True),
        sa.Column("ip_address", sa.VARCHAR(), nullable=True),
        sa.Column("timestamp", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["usuarios.User"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_user_activity_logs_id", "user_activity_logs", ["id"], unique=False
    )
    op.create_table(
        "external_vehicle_data",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("fuente_id", sa.INTEGER(), nullable=False),
        sa.Column("matricula", sa.VARCHAR(length=20), nullable=False),
        sa.Column("datos_vehiculo", sqlite.JSON(), nullable=False),
        sa.Column("fecha_actualizacion", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["fuente_id"],
            ["external_data_sources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_external_vehicle_data_matricula",
        "external_vehicle_data",
        ["matricula"],
        unique=False,
    )
    op.create_index(
        "ix_external_vehicle_data_id", "external_vehicle_data", ["id"], unique=False
    )
    op.create_index(
        "ix_external_vehicle_data_fuente_id",
        "external_vehicle_data",
        ["fuente_id"],
        unique=False,
    )
    op.create_table(
        "external_data_sources",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("caso_id", sa.INTEGER(), nullable=False),
        sa.Column("nombre_archivo", sa.VARCHAR(length=255), nullable=False),
        sa.Column("fecha_importacion", sa.DATETIME(), nullable=False),
        sa.Column("tipo_fuente", sa.VARCHAR(length=50), nullable=False),
        sa.Column("descripcion", sa.TEXT(), nullable=True),
        sa.Column("columnas_mapeadas", sqlite.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["caso_id"],
            ["Casos.ID_Caso"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_external_data_sources_id", "external_data_sources", ["id"], unique=False
    )
    op.create_index(
        "ix_external_data_sources_caso_id",
        "external_data_sources",
        ["caso_id"],
        unique=False,
    )
    op.drop_index(op.f("ix_external_data_matricula"), table_name="external_data")
    op.drop_index(op.f("ix_external_data_id"), table_name="external_data")
    op.drop_index(op.f("ix_external_data_caso_id"), table_name="external_data")
    op.drop_table("external_data")
    # ### end Alembic commands ###
